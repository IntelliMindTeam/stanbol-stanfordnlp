<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                       http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.stanbol</groupId>
		<artifactId>stanbol-parent</artifactId>
		<version>3</version>
	</parent>

	<groupId>at.salzburgresearch.stanbol</groupId>
	<artifactId>stanbol-stanfordnlp-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Apache Stanbol Stanford NLP integration (parent)</name>
	<description>
    Provides modules used for a Server providing a RESTful interface used by
    Stanbol to call NLP processing functionality proided by Stanford NL. The
    JSON serialization for AnalyzedText (as introduced by STANBOL-878) is used
    for encoding Stanford NLP analysis results.
  </description>

	<inceptionYear>2013</inceptionYear>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <stanford-parser-version>2.0.5</stanford-parser-version>
    <stanford-corenlp-version>1.3.5</stanford-corenlp-version>
	</properties>

	<dependencyManagement>
		<dependencies>
      <!-- Stanford NLP dependencies (from maven central)-->
      <dependency>
        <groupId>edu.stanford.nlp</groupId>
        <artifactId>stanford-parser</artifactId>
        <version>${stanford-parser-version}</version>
      </dependency>
      <dependency>
        <groupId>edu.stanford.nlp</groupId>
        <artifactId>stanford-corenlp</artifactId>
        <version>${stanford-corenlp-version}</version>
      </dependency>

      <!-- model dependencies -->
      <!-- use install-model.sh to add them to the local maven repo -->
      <dependency>
        <groupId>edu.stanford.nlp</groupId>
        <artifactId>stanford-corenlp</artifactId>
        <version>${stanford-corenlp-version}</version>
        <classifier>models</classifier>
      </dependency>
      <dependency>
        <groupId>edu.stanford.nlp</groupId>
        <artifactId>stanford-parser</artifactId>
        <version>${stanford-parser-version}</version>
        <classifier>models</classifier>
      </dependency>
      
      
      <dependency>
        <groupId>org.apache.stanbol</groupId>
        <artifactId>org.apache.stanbol.enhancer.nlp</artifactId>
        <version>0.10.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.stanbol</groupId>
        <artifactId>org.apache.stanbol.enhancer.nlp.json</artifactId>
        <version>0.10.0</version>
      </dependency>
      <dependency>
        <groupId>org.apache.stanbol</groupId>
        <artifactId>org.apache.stanbol.enhancer.core</artifactId>
        <version>0.10.0</version>
      </dependency>
      <dependency>
        <groupId>jetty</groupId>
        <artifactId>jetty</artifactId>
        <version>6.0.2</version>
      </dependency>
      <dependency>
        <groupId>jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>6.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.wink</groupId>
        <artifactId>wink-server</artifactId>
        <version>1.2.1-incubating</version>
      </dependency>
      <dependency>
        <groupId>org.apache.wink</groupId>
        <artifactId>wink-jackson-provider</artifactId>
        <version>1.2.1-incubating</version>
      </dependency>
      
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.1</version>
      </dependency>

		</dependencies>
	</dependencyManagement>

	<modules>
		<module>stanfordnlp-segment</module>
		<module>stanfordnlp-core</module>
    <module>stanfordnlp-models</module>
		<module>stanfordnlp-web</module>
		<module>stanfordnlp-server</module>
	</modules>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
